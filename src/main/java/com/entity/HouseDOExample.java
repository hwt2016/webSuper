package com.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HouseDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected Integer limitEnd;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public HouseDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table d_house
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateIsNull() {
            addCriterion("numOfCertificate is null");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateIsNotNull() {
            addCriterion("numOfCertificate is not null");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateEqualTo(String value) {
            addCriterion("numOfCertificate =", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateNotEqualTo(String value) {
            addCriterion("numOfCertificate <>", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateGreaterThan(String value) {
            addCriterion("numOfCertificate >", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateGreaterThanOrEqualTo(String value) {
            addCriterion("numOfCertificate >=", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateLessThan(String value) {
            addCriterion("numOfCertificate <", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateLessThanOrEqualTo(String value) {
            addCriterion("numOfCertificate <=", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateLike(String value) {
            addCriterion("numOfCertificate like", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateNotLike(String value) {
            addCriterion("numOfCertificate not like", value, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateIn(List<String> values) {
            addCriterion("numOfCertificate in", values, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateNotIn(List<String> values) {
            addCriterion("numOfCertificate not in", values, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateBetween(String value1, String value2) {
            addCriterion("numOfCertificate between", value1, value2, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andNumofcertificateNotBetween(String value1, String value2) {
            addCriterion("numOfCertificate not between", value1, value2, "numofcertificate");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Float value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Float value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Float value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Float value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Float value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Float> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Float> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Float value1, Float value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Float value1, Float value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseIsNull() {
            addCriterion("yearsOfHouse is null");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseIsNotNull() {
            addCriterion("yearsOfHouse is not null");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseEqualTo(Integer value) {
            addCriterion("yearsOfHouse =", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseNotEqualTo(Integer value) {
            addCriterion("yearsOfHouse <>", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseGreaterThan(Integer value) {
            addCriterion("yearsOfHouse >", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseGreaterThanOrEqualTo(Integer value) {
            addCriterion("yearsOfHouse >=", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseLessThan(Integer value) {
            addCriterion("yearsOfHouse <", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseLessThanOrEqualTo(Integer value) {
            addCriterion("yearsOfHouse <=", value, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseIn(List<Integer> values) {
            addCriterion("yearsOfHouse in", values, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseNotIn(List<Integer> values) {
            addCriterion("yearsOfHouse not in", values, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseBetween(Integer value1, Integer value2) {
            addCriterion("yearsOfHouse between", value1, value2, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andYearsofhouseNotBetween(Integer value1, Integer value2) {
            addCriterion("yearsOfHouse not between", value1, value2, "yearsofhouse");
            return (Criteria) this;
        }

        public Criteria andMarketvalueIsNull() {
            addCriterion("marketValue is null");
            return (Criteria) this;
        }

        public Criteria andMarketvalueIsNotNull() {
            addCriterion("marketValue is not null");
            return (Criteria) this;
        }

        public Criteria andMarketvalueEqualTo(Float value) {
            addCriterion("marketValue =", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueNotEqualTo(Float value) {
            addCriterion("marketValue <>", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueGreaterThan(Float value) {
            addCriterion("marketValue >", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueGreaterThanOrEqualTo(Float value) {
            addCriterion("marketValue >=", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueLessThan(Float value) {
            addCriterion("marketValue <", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueLessThanOrEqualTo(Float value) {
            addCriterion("marketValue <=", value, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueIn(List<Float> values) {
            addCriterion("marketValue in", values, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueNotIn(List<Float> values) {
            addCriterion("marketValue not in", values, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueBetween(Float value1, Float value2) {
            addCriterion("marketValue between", value1, value2, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andMarketvalueNotBetween(Float value1, Float value2) {
            addCriterion("marketValue not between", value1, value2, "marketvalue");
            return (Criteria) this;
        }

        public Criteria andValueofarroundIsNull() {
            addCriterion("valueOfArround is null");
            return (Criteria) this;
        }

        public Criteria andValueofarroundIsNotNull() {
            addCriterion("valueOfArround is not null");
            return (Criteria) this;
        }

        public Criteria andValueofarroundEqualTo(Float value) {
            addCriterion("valueOfArround =", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundNotEqualTo(Float value) {
            addCriterion("valueOfArround <>", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundGreaterThan(Float value) {
            addCriterion("valueOfArround >", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundGreaterThanOrEqualTo(Float value) {
            addCriterion("valueOfArround >=", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundLessThan(Float value) {
            addCriterion("valueOfArround <", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundLessThanOrEqualTo(Float value) {
            addCriterion("valueOfArround <=", value, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundIn(List<Float> values) {
            addCriterion("valueOfArround in", values, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundNotIn(List<Float> values) {
            addCriterion("valueOfArround not in", values, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundBetween(Float value1, Float value2) {
            addCriterion("valueOfArround between", value1, value2, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andValueofarroundNotBetween(Float value1, Float value2) {
            addCriterion("valueOfArround not between", value1, value2, "valueofarround");
            return (Criteria) this;
        }

        public Criteria andCityofhouseIsNull() {
            addCriterion("cityOfHouse is null");
            return (Criteria) this;
        }

        public Criteria andCityofhouseIsNotNull() {
            addCriterion("cityOfHouse is not null");
            return (Criteria) this;
        }

        public Criteria andCityofhouseEqualTo(String value) {
            addCriterion("cityOfHouse =", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseNotEqualTo(String value) {
            addCriterion("cityOfHouse <>", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseGreaterThan(String value) {
            addCriterion("cityOfHouse >", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseGreaterThanOrEqualTo(String value) {
            addCriterion("cityOfHouse >=", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseLessThan(String value) {
            addCriterion("cityOfHouse <", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseLessThanOrEqualTo(String value) {
            addCriterion("cityOfHouse <=", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseLike(String value) {
            addCriterion("cityOfHouse like", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseNotLike(String value) {
            addCriterion("cityOfHouse not like", value, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseIn(List<String> values) {
            addCriterion("cityOfHouse in", values, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseNotIn(List<String> values) {
            addCriterion("cityOfHouse not in", values, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseBetween(String value1, String value2) {
            addCriterion("cityOfHouse between", value1, value2, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andCityofhouseNotBetween(String value1, String value2) {
            addCriterion("cityOfHouse not between", value1, value2, "cityofhouse");
            return (Criteria) this;
        }

        public Criteria andHousetypeIsNull() {
            addCriterion("houseType is null");
            return (Criteria) this;
        }

        public Criteria andHousetypeIsNotNull() {
            addCriterion("houseType is not null");
            return (Criteria) this;
        }

        public Criteria andHousetypeEqualTo(String value) {
            addCriterion("houseType =", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeNotEqualTo(String value) {
            addCriterion("houseType <>", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeGreaterThan(String value) {
            addCriterion("houseType >", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeGreaterThanOrEqualTo(String value) {
            addCriterion("houseType >=", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeLessThan(String value) {
            addCriterion("houseType <", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeLessThanOrEqualTo(String value) {
            addCriterion("houseType <=", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeLike(String value) {
            addCriterion("houseType like", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeNotLike(String value) {
            addCriterion("houseType not like", value, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeIn(List<String> values) {
            addCriterion("houseType in", values, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeNotIn(List<String> values) {
            addCriterion("houseType not in", values, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeBetween(String value1, String value2) {
            addCriterion("houseType between", value1, value2, "housetype");
            return (Criteria) this;
        }

        public Criteria andHousetypeNotBetween(String value1, String value2) {
            addCriterion("houseType not between", value1, value2, "housetype");
            return (Criteria) this;
        }

        public Criteria andPaymentIsNull() {
            addCriterion("payment is null");
            return (Criteria) this;
        }

        public Criteria andPaymentIsNotNull() {
            addCriterion("payment is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentEqualTo(Float value) {
            addCriterion("payment =", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotEqualTo(Float value) {
            addCriterion("payment <>", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentGreaterThan(Float value) {
            addCriterion("payment >", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentGreaterThanOrEqualTo(Float value) {
            addCriterion("payment >=", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentLessThan(Float value) {
            addCriterion("payment <", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentLessThanOrEqualTo(Float value) {
            addCriterion("payment <=", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentIn(List<Float> values) {
            addCriterion("payment in", values, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotIn(List<Float> values) {
            addCriterion("payment not in", values, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentBetween(Float value1, Float value2) {
            addCriterion("payment between", value1, value2, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotBetween(Float value1, Float value2) {
            addCriterion("payment not between", value1, value2, "payment");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(Float value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(Float value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(Float value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(Float value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(Float value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(Float value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<Float> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<Float> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(Float value1, Float value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(Float value1, Float value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("updatetime is null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("updatetime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeEqualTo(Date value) {
            addCriterion("updatetime =", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotEqualTo(Date value) {
            addCriterion("updatetime <>", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThan(Date value) {
            addCriterion("updatetime >", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updatetime >=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThan(Date value) {
            addCriterion("updatetime <", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("updatetime <=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIn(List<Date> values) {
            addCriterion("updatetime in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotIn(List<Date> values) {
            addCriterion("updatetime not in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeBetween(Date value1, Date value2) {
            addCriterion("updatetime between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("updatetime not between", value1, value2, "updatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table d_house
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table d_house
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}